# -*- coding: utf-8 -*-
"""company_employee_details.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F5RV1a8D_2gr0LdOqwcyIIkzeDEwYCO2
"""

import pandas as pd # For data manipulation
import sqlite3     # For database operations
import matplotlib.pyplot as plt # For data visualization

 # Read a file
df=pd.read_csv('/content/company_employee_details.csv')
df.head()

# Connect to SQLite (creates a database file)
conn=sqlite3.connect("company.db")
cursor=conn.cursor()

# Create a Company details table
cursor.execute('''
CREATE TABLE IF NOT EXISTS company_details(
id INTEGER PRIMARY KEY AUTOINCREMENT,
company_name TEXT,
department TEXT,
salary INTEGER,
anual_bonus INTEGER,
employee_id INTEGER
)
 ''')

# Insert Company data into the table
df.to_sql('company_details', conn, if_exists='replace', index=False)

# Close the database connection
conn.close()

#Total number of workers per company
employee_quantity=df.groupby('company')['employee_id'].count().reset_index() #.reset_index() to get clear output with title.
print(employee_quantity)

#Overall salary per company
df['salary']=df['salary'].astype(int) # change datatype into INTEGER format
company_wise_salary=df.groupby('company')['salary'].sum().reset_index()
print(company_wise_salary)

#Overall anual bonus per company
df['annual_bonus']=df['annual_bonus'].astype(int) # change datatype into INTEGER format
company_wise_bonus=df.groupby('company')['annual_bonus'].sum().reset_index()#sum() is caculate the sum of anual bonus
print(company_wise_bonus)

#Highest salary department in Glasses company
df['salary']=df['salary'].astype(int)
df_company=df[df['company']== 'Glasses'] # Select specfic company name
df_max=df_company.sort_values(by='salary',ascending=False) # df.sort_values() function sort the salary in DESC order.
heighst_salary=df_max.groupby('department')['salary'].sum().reset_index()
maximum=heighst_salary.max() #Get a maximum salary department
print(maximum)

#Lowest workers count per company
employee_quantity=df.groupby('company')['employee_id'].count().reset_index()
minium_employee=employee_quantity.min() # Get a lowest employee count per company
print(minium_employee)

#Calculate employee count for selective department
employye_count=df[df["department"].isin(["BigData", "Design"])] #applying filter to get specific dept
count_emp=employye_count.groupby('department')['employee_id'].count().reset_index()
print(count_emp)

# Show the data lable of category values
for i in range(len(employee_quantity['company'])):
    plt.text(i, employee_quantity['employee_id'][i], employee_quantity['employee_id'][i], ha='center', va='bottom')

#plot employee count in company wise
plt.bar(employee_quantity['company'], employee_quantity['employee_id'])
plt.xlabel('Company')
plt.ylabel('Employee Count')
plt.title('Employee Count in Company Wise')
plt.show()

# Show the data lable of anual bonus

for i in range(len(company_wise_bonus['company'])):
    plt.text(i, company_wise_bonus['annual_bonus'][i], company_wise_bonus['annual_bonus'][i], ha='center', va='bottom')


#plot anual bonus in company wise
plt.bar(company_wise_bonus['company'], company_wise_bonus['annual_bonus'])
plt.xlabel('Company')
plt.ylabel('Annual Bonus')
plt.title('Annual Bonus in Company Wise')
plt.show()

for i in range(len(company_wise_salary['company'])):
    plt.text(i, company_wise_salary['salary'][i], company_wise_salary['salary'][i], ha='center', va='bottom')

#plot salary in company wise
plt.bar(company_wise_salary['company'], company_wise_salary['salary'])
plt.xlabel('Company')
plt.ylabel('Salary')
plt.title('Salary in Company Wise')
plt.show()